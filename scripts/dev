#!/bin/bash

# Start both backend and frontend development servers

set -e

echo "🚀 Starting Full Development Environment"
echo "======================================="

# Get script directory
SCRIPT_DIR="$(dirname "$0")"

# Check if backend directory exists
if [ ! -d "$SCRIPT_DIR/../backend" ]; then
    echo "❌ backend directory not found"
    exit 1
fi

# Check if app directory exists  
if [ ! -d "$SCRIPT_DIR/../app" ]; then
    echo "❌ app directory not found"
    exit 1
fi

echo "🔧 Starting backend server..."
"$SCRIPT_DIR/dev-backend" &
BACKEND_PID=$!

# Wait for backend to start
echo "⏳ Waiting for backend to initialize..."
sleep 8

echo "🌐 Starting frontend server..."
echo ""
echo "Servers will start in background. Use browser MCP tools for testing."
echo "Press Ctrl+C to stop all servers."

# Start frontend server
"$SCRIPT_DIR/dev-frontend" &
FRONTEND_PID=$!

# Cleanup function
cleanup() {
    echo ""
    echo "🧹 Stopping servers..."
    kill $BACKEND_PID 2>/dev/null || true
    kill $FRONTEND_PID 2>/dev/null || true
    echo "✅ Servers stopped"
}

trap cleanup EXIT

echo "Backend PID: $BACKEND_PID"
echo "Frontend PID: $FRONTEND_PID"
echo ""
echo "Waiting for frontend server to start..."
sleep 3

# Test if servers are running
if curl -s http://127.0.0.1:3000 >/dev/null 2>&1; then
    echo "✅ Backend API is running on http://127.0.0.1:3000"
else
    echo "⚠️  Backend may still be starting..."
fi

if curl -s http://localhost:8000 >/dev/null 2>&1; then
    echo "✅ Frontend server is running on http://localhost:8000"
else
    echo "⚠️  Frontend server may still be starting..."
fi

echo ""
echo "🎯 Development environment ready!"
echo "   Frontend: http://localhost:8000"
echo "   Backend:  http://127.0.0.1:3000"

# Keep running until interrupted
while true; do
    sleep 1
done